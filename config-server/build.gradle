apply from: '../build.gradle'
apply plugin: 'application'

mainClassName = "us.jsource.configserver.ConfigServerApplication"

dependencies {
    compile('org.springframework.cloud:spring-cloud-config-server')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
}


import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile

task createDockerfile(type: Dockerfile) {
    destFile = project.file('build/libs/Dockerfile')
    from 'openjdk:9'
    instruction 'RUN mkdir usr/local/config-server'
    copyFile("config-server-${version}.jar", "/usr/local/config-server-${version}.jar")
    entryPoint 'java'
    defaultCommand '-jar',
            '-Dserver.port=${SERVER_PORT}',
            '-Dspring.cloud.config.server.git.uri=${SPRING_CLOUD_CONFIG_SERVER_GIT_URI}',
            '-Dspring.cloud.config.server.git.searchPaths=${SPRING_CLOUD_CONFIG_SERVER_GIT_SEARCHPATHS}',
            '-Deureka.client.service-url.defaultZone=${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE}',
            "/usr/local/config-server-${version}.jar"
}

task buildImage(type: DockerBuildImage) {
    dependsOn createDockerfile
    inputDir = createDockerfile.destFile.parentFile
    tag = "vadimdissa/config-server:${version}"
}

build.finalizedBy(buildImage)